vim编辑器 
1.打开文件 
vim/vi filename 
注意：打开的文件也可以是一个不存在的文件，当文件保存的时候会自动创建

2.vim编辑器的三种基本工作模式
1）默认模式：使用vim编辑打开文件时默认进入的模式
2）插入模式：主要用于文件的编辑
3）底行模式：主要用于保存文件和退出编辑器

3.模式的切换
默认模式 -> 插入模式
i,I,a,A,o,O 
插入模式 -> 默认模式 
ESC 
默认模式 -> 底行模式 
按冒号":"
底行模式 -> 默认模式 
[1]删除底行模式下的所有内容，包括冒号
[2]两下ESC键

4.进入插入模式 
i:从光标的位置开始编辑
I：从光标所在位置第一个非空白位置开始编辑
a:从光标的下一个位置开始编辑
A：从光标所在行的最后一个位置开始编辑
o:从光标的下一行新建一行开始编辑
O：从光标的上一行新建一行开始编辑

5.底行模式 
：w 保存文件 
: q 退出编辑器
：wq 保存并退出 
：q! 强制退出不保存
分屏显示
:vsp filename  
:sp filename 

6.默认模式 
yy ------------- 复制一行
p -------------- 粘贴
dd ------------- 剪切一行
nyy ------------ 复制n行
ndd ------------ 剪切n行 
u -------------- 撤销
ctrl + r ------- 恢复 

7.vim 编辑器高级配置
step 1: 将vim配置文件拷贝到虚拟机 
华清share/vim 
step 2: 进入vim配置文件中，将所有以.vim开头的文件和文件夹拷贝到家目录
cd ~/vim 
cp ./.vim* ~ -r
step 3: 修改文件的权限 
sudo chmod 777 ~/.vim* -R 

直接按空格从 默认模式 -> 底行模式  


-----------------------------------------------------------
编译：将C语言转换成计算机能识别的二进制机器语言
gcc 编译器（GNU）
预处理：处理所有以#开头头的行(展开头文件)
gcc -E *.c -o *.i 
编译：将预处理后的文件转换成汇编文件 （反汇编 灰色地带）
gcc -S *.i -o *.s 
汇编: 将汇编文件处理成二进制的目标文件 
gcc -c *.s -o *.o
链接: 二进制的目标文件和库文件做链接生成可执行文件 
gcc *.o - * 

执行程序： 
	./可执行文件名
ctrl + c 强制终止程序 

包含四步
gcc *.c -o * 
-o 指定生成文件名
省略-o 不指定文件名 
默认生成的文件名 a.out 

配置交叉编译工具 
 file 可知执行文件名
 step 1: 将 华清share/gcc-4.6.4.tar.xz 拷贝到虚拟机
 step 2: 解压压缩包
 tar -xvf gcc-4.6.4.tar.xz 
 step 3: 将gcc-4.6.4 重命名为toolchain 
 mv gcc-4.6.4 toolchain
 step 4: 修改配置文件
 sudo vim/etc/bash.bashrc 
 在最后一行添加
 export PATH=$PATH:/home/fs/toolchain/bin
 step 5:使配置生效
 source /etc/bash.bashrc
 
 输入arm-n 按Tab如果能自动补全
 arm-none-linux-gnueabi-
 就代表成功了 
使用： 
 arm-none-linux-gnueabi-gcc hello.c -o hello

