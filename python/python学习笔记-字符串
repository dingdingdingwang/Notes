
#字符串

ord()函数将字符转换成对应的Unicode码
chr()函数将十进制数字转换成对应的字符
----------------------------------
>>> ord('A')
65
>>> ord('高')
39640
>>> chr(66)
'B'
>>> ord('王')
29579
----------------------------------

允许空字符串，不包含任何字符且长度为0

转义字符
\（在行尾时）续行符
\\反斜杠
\'单引号
\"双引号
\b退格
\n换行
\t横向制表符
\r回车

字符串赋值
'xxx'*3:表示xxx复制三次

不换行打印
print("sxt",end='')
print("sxt",enf='##')
print("sxt")
结果
sxtsxt##sxt

input()函数:从控制台读取键盘输入的内容
str()函数:将其他数据类型转换为字符串

※※※使用[]提取字符:在[]里面指定偏移量，可以提取该位置的单个字符
		正向搜索：
		最左侧第一个字符，偏移量为0，第二个偏移量为1，以此类推。直到len(str)-1为止。
		反向搜索：
		最右侧第一个字符，偏移量是-1，倒数第二个偏移量是-2，以此类推，直到-len(str)为止。
		
			假设一个字符串str = "abcd"
			正向搜索：a(0)b(1)c(2)d(3)
			str[0]表示字符a
			str[3]表示字符d
			反向搜索：a(-4)b(-3)c(-2)d(-1)
			str[-1]表示字符d
			str[-4]表示字符a

replace()函数：实现字符串替换
str = "abcd"
str = str.replace("a","A")#将a修改为A
实际上，是创建了新的字符串对象，并指向了变量str，而不是修改了以前的字符串。

字符串切片slice
让我们快速提取字符串标准格式为
[起始偏移量:终止偏移量end:步长step]
存在起始和终止偏移量时，包头不包尾
[:]提取整个字符串
[start:]从start索引开始到结尾
[:end]从头开始直到end-1
[start:end]从start到end-1
[start:end:step]从start提取到end-1,步长是step
[-3:]倒数三个
[-8:-3]倒数第八个到倒数第三个（包头不包尾）
[::-1]逆序排列，步长为负，从右到左反向提取

split()分割和join()合并
split()可以基于指定分隔符将字符串分隔成多个子字符串并存储到列表中，如果不指定分隔符，则默认使用空白字符（换行符/空格/制表符）。
join()的作用和split()相反，用于将一系列子字符串连接起来。
"*".join(a)：用*将a里的内容连接起来
"".join(a)：直接将a里的内容连接起来
注意：使用字符串拼接符+，会生成新的字符串对象，因此不推荐使用+来拼接字符。join()仅新建一次对象。

字符串驻留机制：
仅保存一份相同且不可变字符串的方法，不同的值被存放在字符串驻留池中，对于符合标识符规则的字符串（仅包含下划线(_)、字母和数字）。

※※※常用查找方法
len(a)：字符串a的长度
a.startswitch("")：判断是否以指定字符串开头
a.endswitch("")：判断是否以指定字符串结尾
a.find("")：第一次出现指定字符串的位置
a.rfind("")：最后一次出现指定字符串的位置
a.count("")：指定字符串出现了几次
a.isalnum()：判断所有字符全是字母或数字

strip()去除字符串首尾指定信息(括号内)
lstrip()去除字符串左边指定信息（括号内）
rstrip()去除字符串右边指定信息（括号内）

※大小写转换
a.capitalize()：产生新的字符串，首字母大写
a.title()：产生新的字符串，每个单词都首字母大写
a.upper()：产生新的字符串，所有字符全转成大写
a.lower()：产生新的字符串，所有字符全转成小写
a.swapcase()：产生新的字符串，所有字母大小写转换

格式排版
center()：居中
>>>a.center(10,"*")：共10个字符，a居中，左右填充*
>>>a.center(10)：共10个字符，a居中，左右填充空格
ljust()：左对齐
>>>a.ljust(10,"*")：共10个字符，a左对齐，剩余字符用*填充
rjust()：右对齐
>>>.rjust(10,"*")：共10个字符，a右对齐，剩余字符用*填充

isalnum()：判断是否为字母或数字
isalpha()：检测字符串是否只由字母组成（含汉字）
isdigit()：检测字符串是否只由数字组成
isspace()：检测字符串是否为空白符
isupper()：是否为大写字母
islower()：是否为小写字母

字符串格式化
format()函数
>>> a = "名字是：{0},年龄是：{1}"
>>> b = a.format("高淇",18)
>>> b
'名字是：高淇,年龄是：18'
>>> c = a.format("高希希",6)
>>> c
'名字是：高希希,年龄是：6'
>>> a = "名字是：{name},年龄是：{age}"
>>> b = a.format(name="刘德华",age=48)
>>> b
'名字是：刘德华,年龄是：48'

填充和对齐
^、居中，后带宽度
<、左对齐，后带宽度
>、右对齐，后带宽度
：号后面带填充的字符，只能是一个字符，不指定的话默认是空格填充
>>> "我是{0},我喜欢数字{1:*<8}".format("高淇","666")
'我是高淇,我喜欢数字666*****'
>>> "我是{0},我喜欢数字{1:*>8}".format("高淇","666")
'我是高淇,我喜欢数字*****666'
>>> "我是{0},我喜欢数字{1:*^8}".format("高淇","666")
'我是高淇,我喜欢数字**666***'
>>> "我是{0},我喜欢数字{1:^8}".format("高淇","666")
'我是高淇,我喜欢数字  666   

数字格式化
浮点数通过f,整数通过d进行需要的格式化。
>>> a = "我是{0},我的存款{1:.2f}"
>>> a.format("高淇",3888.234342)
'我是高淇,我的存款3888.23'

{:.2f}：保留小数点后两位
{:+.2f}：带符号保留小数点后两位
{:.0f}：不带小数
{:0>2d}：数字补零（填充左边，宽度为2）
{:x<4d}：数字补x（填充右边，宽度为4）
{:x>4d}：数字补x（填充左边，宽度为4）
{:,}：以逗号分隔的数字格式
{:.2%}：百分比格式
{:.2e}：指数记法
{:10d}：右对齐（默认，宽度为10）
{:<10d}：左对齐（宽度为10）
{:^10d}：中间对齐（宽度为10）

可变字符串
在Python中，字符串属于不可变对象，不支持原地修改，如果需要修改其中的值，只能创建新的字符串对象。可以使用io.StringIO对象或array模块
--------------------------------------------
>>> s = "hello,sxt"
>>> import io
>>> sio = io.StringIO(s)
>>> sio
<_io.StringIO object at 0x00000206EA532D30>
>>> sio.getvalue()
'hello,sxt'
>>> sio.seek(7)
7
>>> sio.write("g")
1
>>> sio.getvalue()
'hello,sgt'
--------------------------------------------