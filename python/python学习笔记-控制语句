
#控制语句

##选择结构
选择结构通过判断条件是否成立，来决定执行哪个分支。选择结构有多种形式，分为：单分支，双分支，多分支。

###单分支结构
if 条件表达式:
	语句/语句块

其中：
①.条件表达式：可以是逻辑表达式、关系表达式、算术表达式等等。
②.语句/语句块：可以是一条语句，也可以是多条语句。多条语句，缩进必须对齐一致。
---------------------------------
#输入一个数，小于10，则打印这个数字
num = input("输入一个数字：")
if int(num) < 10:
    print(num)

---------------------------------
###条件表达式详解
条件表达式的值为False的情况如下：
False、0、0.0、空值None、空序列对象（空列表[]、空元组()、空集合{}、空字典{}、空字符串''）、空range对象、空迭代对象。
其他情况，均为True。
---------------------------------------⬇
#测试各种条件表达式
###整数作为条件表达式
if 3:
    print("ok")
    
###列表作为条件表达式，由于为空列表，是False
a = []
if a:
    print("空列表，False")

###非空字符串，是True
s = "False"
if s:
    print("非空字符串，是True")

###布尔值
if True:
    print("True")
    
###
c = 9
if 3<c<20:
    print("3<c<20")
if 3<c and c<20:
    print("3<c and c<20")

---------------------------------------⬆
注意：
条件表达式中，不能有赋值操作符"="
如下代码是错误的：
if 3<c and (c=20)
	print("赋值符不能出现在条件不表达式中")

###双分支选择结构
if 条件表达式：
    语句1/语句块1
else:
    语句2/语句块2

-----------------------------------------------------------⬇
#输入一个数字，小于10，则打印该数字；大于10，则打印“数字太大”
num = input("请输入一个数：")
if int(num)<10:
    print(num)
else:
    print("数字太大")


-----------------------------------------------------------⬆

###三元条件运算符
python提供了三元运算符，用来在某些简单双分支复制情况。三元条件运算符语法格式如下：
	条件为真时的值 if (条件表达式) else 条件为假时的值
----------------------------------------
num = input("请输入一个数字：")
print(num if int(num)<10 else "数字太大")
----------------------------------------


###多分支选择结构
多分支结构，几个分支之间是有逻辑关系的，不能随意颠倒顺序。

if 条件表达式1：
	语句1/语句块1
elif条件表达式2：
	语句2/语句块2

.
.
.
elif 条件表达式n：
	语句n/语句块n
[else:
	语句n+1/语句块n+1	#可选项
]

-----------------------------------------------------------------------------------------------⬇
#输入一个学生的成绩，将其转换成简单描述：不及格（小于60）、及格（60-79）、良好（80-89）、优秀（90-100）。
方法一（使用完整的条件表达式）每个分支都使用了独立的、完整的判断、顺序可以随意挪动，而不影响程序运行。
score = int(input("请输入分数："))
grade = ''
if(score<60):
    grade="不及格"
if(60<=score<80):
    grade="及格"
if(80<=score<90):
    grade="良好"
if(90<=score<=100):
    grade="优秀"

print("分数是{0}，等级是{1}".format(score,grade))

方法二（使用多分支结构）多分支结构，几个分支之间是有逻辑关系的，不能随意颠倒顺序。
score = int(input("请输入分数："))
grade = ""

if score < 60:
    grade = "不及格"
elif score < 80:
    grade = "及格"
elif score <90:
    grade = "良好"
else:
    grade = "优秀"

print("分数是{0},等级是{1}".format(score,grade))

#已知点的坐标(x,y)，判断其所在的象限
x = int(input("请输入x的坐标："))
y = int(input("请输入y的坐标："))

if(x==0 and y==0):print("这个点是原点")
elif(x==0):print("这个点在Y轴")
elif(y==0):print("这个点在X轴")
elif(x>0 and y>0):print("第一象限")
elif(x<0 and y>0):print("第二象限")
elif(x<0 and y<0):print("第三象限")
else:
    print("第四象限")

----------------------------------------------------------------------------------------------⬆

###选择结构嵌套
选择结构可以嵌套，使用时一定要注意控制好不同级别代码块的缩进量，因为缩进量决定了代码的从属关系。
if 表达式1：
	语句块1
	if 表达式2：
		语句块2
	else：
		语句块3
else：
	if 表达式4：
		语句块4

---------------------------------------------------------------------------------⬇
#输入一个分数。分数在0-100之间。90以上是A，80以上是B，70以上是C，60以上是D，60以下是E。
score = int(input("请输入一个0-100的分数:"))
grade = ""
if score>100 or score < 0:
    score = int(input("请输入一个0-100的分数："))
else:
    if score >=90:
        grade = "A"
    elif score >=80:
        grade = "B"
    elif score >=70:
        grade = "C"
    elif score>=60:
        grade = "D"
    else:
        grade = "E"
    print("分数为{0},等级为{1}".format(score,grade))
    
---------------------------------------------------------------------------------⬆

##循环结构