
P55



链式赋值
系列解包赋值
变量位于：栈内存
对象位于：堆内存
x=y=123        #相当于x=123;y=123
a,b,c=4,5,6    #相当于a=4;b=5;c=6

#导入海龟绘图模块
import turtle
t = turtle.Pen()
#这是一个循环
for x in range(360):
    t.forward(x)
    t.left(59)

        使用/行连接符

        一行程序长度是没有限制的，但是为了可读性更强，通常将一行较长的程序分为多行。这时，我们可以使用/行连接符，把它放在行结束的地方。解释器仍将它们解释为同一行。

a = 3+2#加法
print (a)
b = 30-5#减法
print (b)
c = 3*6#乘法
print (c)
d = 8/2#浮点除法
print (d)
e = 7//2#整数除法
print (e)
f = 7%4#模（取余）
print (f)
g = 2**3#幂次
print (g)

#使用divmod()函数，同时得到商和余数,返回的是一个元组
h = divmod(13,3)
print (h)

j =0B101
print (j)
k =0o10
print (k)
l =0Xf
print (l)

#四舍五入函数round()
y = round(3.514)

w = round（3.141）

#自动转型：整数与浮点数混合运算时，表达式结果自动转型成浮点数
x = 2+8.0
print (x)

m = int(3.14156)
print (m)

n = int(True)
print (n)

google = 10**100
print (google)

计算机中时间的表示是从“UNIX时间点：1970年1月1日00:00:00”开始，以毫秒(1/1000秒)进行计算
import time
b = time.time()#返回以秒为单位，毫秒精度的浮点值
print (int(b)//60//60//24//365)

同一运算符
用于比较两个对象的存储单元，实际比较的是对象的地址
    is     判断两个标识符是不是引用同一个对象
    is not 判断两个标识符是不是引用不同对象

is 与 == 区别:
is用于判断两个变量引用对象是否为同一个，即比较对象的地址(id值)
== 判断引用变量引用对象的值是否相等，默认调用对象的_eq_()方法

整数缓存问题：
在命令行中执行，仅仅针对比较小的整数对象进行缓存（范围是[-5,256]）缓存起来。
在文件中执行，解释器做了一部分优化(范围是[-5,任意正整数])。

is 运算符比== 效率高，在变量和None进行比较时，应该用is。

---------------------------------------------------
基本运算符
and，or，not 布尔与，布尔或，布尔非
is , is not 同一性判断
<，<=，>，>=，!=，== 比较值是否相当，可以连用
|，^，& 按位或，按位异或，按位与
<<，>> 移位
~ 按位翻转
+ 加，- 减，* 乘
/ 浮点除
// 整数除
% 取余
** 幂运算
--------------------------------------------------

>>> a =4
>>> 3<a<10#关系运算符可以连用
True
>>> a = 0b11001 #二进制表示
>>> b = 0b01000
>>> c = a|b
>>> bin(c)
'0b11001'
>>> bin(c&b)
'0b1000'
>>> bin(c^b)
'0b10001'
>>> a = 3
>>> a << 2 #左移2位相当于乘以2
12
>>> a = 8
>>> a >> 1
4

※Python不支持自增(++)自减(--)
运算符优先级（从高到低）
复杂的表达式一定要使用小括号组织
1.乘除优先加减
2.位运算和算术运算符>比较运算符>赋值运算符>逻辑运算符
>>> (5+10*x)/5-13*(y-1)*(a+b)/x+9*(5/x+(12+x)/y)

-----------------------------------------------------------------
**	指数(最高优先级)
~	按位翻转	
*，/，%，//	乘，除，取模，取整除
+，-		加，减
>>，<<	右移，左移
&	位'AND'
^，|	位运算符
<=，<，>，>=	比较运算符
<>，==，!=	等于运算符
=，%=，/=，//=，-=，+=，*=，**=	赋值运算符
is ，is not，or，身份运算符
in，not in，成员运算符
not，or，and	逻辑运算符
------------------------------------------------------------------